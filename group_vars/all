---

user_name: "artur"
user_home: "/home/{{ user_name }}"
user_conf: "{{ user_home }}/.config"
user_cache: "{{ user_home }}/.cache"
user_work: "{{ user_home }}/work"
user_mine: "{{ user_home }}/self"




apt:
  dependencies:
    - "curl"
    - "wget"
    - "dirmngr"
    - "aptitude"
    - "ca-certificates"
    - "apt-transport-https"
    - "software-properties-common"




archive:
  install:
    self:
      packages:
        - "unar"
        - "unzip"




audacity:
  install:
    self:
      packages:
        - "audacity"




autoenv:
  configure:
    self:
      src: "autoenv/files/script"
      dst: "{{ user_conf }}/autoenv/script"

  environment:
    src: "autoenv/files/env"
    dst: "{{ user_conf }}/autoenv/env"




awscli:
  install:
    self:
      pips:
        - "awscli"

  configure:
    self:
      src: "awscli/files/script"
      dst: "{{ user_conf }}/awscli/script"

  environment:
    src: "awscli/files/env"
    dst: "{{ user_conf }}/awscli/env"




bash:
  install:
    self:
      packages:
        - "bash"

  configure:
    global:
      src: "bash/files/global"
      dst: "/etc/bash.bashrc"
      become: yes
    self:
      src: "bash/files/config"
      dst: "{{ user_conf }}/bash/config"




c:
  install:
    self:
      packages:
        - "gcc"
        - "build-essential"
    utils:
      packages:
        - "cloc"

  environment:
    src: "c/files/env"
    dst: "{{ user_conf }}/c/env"




common:
  given:

  global_env: "{{ user_conf }}/env"




dbeaver:
  install:
    self:
      gpgkeys:
        - "https://dbeaver.io/debs/dbeaver.gpg.key"
      lists:
        - "deb https://dbeaver.io/debs/dbeaver-ce /"
      packages:
        - "dbeaver-ce"




dconf:
  install:
    self:
      packages:
        - "dconf-editor"




defold:
  url: "https://www.defold.com/download/editor2/Defold-x86_64-linux.zip"




desktop:
  install:
    self:
      packages:
        - "python-psutil"

  registry:
    /org/gnome/desktop/interface:
      font-name: "Lato Medium 11"
      text-scaling-factor: "0.75"
      gtk-im-module: "gtk-im-context-simple"
      enable-animations: "false"
      gtk-theme: "Adwaita"
    /org/gnome/desktop/screensaver:
      picture-uri: "file:///usr/share/backgrounds/gnome/endless-shapes.jpg"
      picture-options: "zoom"
      primary-color: "#ffffff"
      secondary-color: "#000000"




dircolors:
  configure:
    self:
      src: "dircolors/files/config"
      dst: "{{ user_conf }}/dircolors/config"

  environment:
    src: "dircolors/files/env"
    dst: "{{ user_conf }}/dircolors/env"




docker:
  install:
    self:
      gpgkeys:
        - "https://download.docker.com/linux/debian/gpg"
      lists:
        - "deb [arch=amd64] https://download.docker.com/linux/debian buster stable"
      packages:
        - "docker-ce"
    compose:
      pips:
        - "docker-compose"
        - "docker-nuke"

  environment:
    src: "docker/files/env"
    dst: "{{ user_conf }}/docker/env"




firefox:
  install:
    self:
      packages:
        - "firefox-esr"

  environment:
    src: "firefox/files/env"
    dst: "{{ user_conf }}/firefox/env"




flatpak:
  remotes:
    - "flathub https://flathub.org/repo/flathub.flatpakrepo"

  install:
    self:
      packages:
        - "flatpak"
        - "gnome-software-plugin-flatpak"




fonts:
  configure:
    self:
      src: "fonts/files/config"
      dst: "{{ user_conf }}/fonts/config"

  environment:
    src: "fonts/files/env"
    dst: "{{ user_conf }}/fonts/env"




fzf:
  install:
    self:
      packages:
        - "fzf"




gimp:
  install:
    self:
      packages:
        - "gimp"




git:
  name: "Artur Tamborski"
  email: "tamborskiartur@gmail.com"

  install:
    self:
      packages:
        - "git"
        - "git-extras"

  configure:
    self:
      src: "git/files/config"
      dst: "{{ user_conf }}/git/config"
    ignore:
      src: "git/files/ignore"
      dst: "{{ user_conf }}/git/ignore"
    pre-push:
      src: "git/files/hooks/pre-push"
      dst: "{{ user_conf }}/git/hooks/pre-push"

  environment:
    src: "git/files/env"
    dst: "{{ user_conf }}/git/env"




github:




gnupg:
  install:
    self:
      packages:
        - "gpg"
  
  configure:
    self:
      src: "gnupg/files/config"
      dst: "{{ user_conf }}/gnupg/config"

  environment:
    src: "gnupg/files/env"
    dst: "{{ user_conf }}/gnupg/env"




go:
  url: "https://dl.google.com/go/go1.13.linux-amd64.tar.gz"

  environment:
    src: "go/files/env"
    dst: "{{ user_conf }}/go/env"




gopass:
  install:
    self:
      packages:
        - "gopass"




htop:
  install:
    self:
      packages:
        - "htop"

  configure:
    self:
      src: "htop/files/config"
      dst: "{{ user_conf }}/htop/config"




httpie:
  install:
    self:
      pips:
        - "httpie"

  configure:
    self:
      src: "httpie/files/config"
      dst: "{{ user_conf }}/httpie/config"

  environment:
    src: "httpie/files/env"
    dst: "{{ user_conf }}/httpie/env"




imagemagick:
  install:
    self:
      packages:
        - "imagemagick"




inkscape:
  install:
    self:
      packages:
        - "inkscape"




java:
  install:
    self:
      packages:
        - "default-jre"

  configure:
    self:
      src: "java/files/config"
      dst: "{{ user_conf }}/java/config"

  environment:
    src: "java/files/env"
    dst: "{{ user_conf }}/java/env"




journal:




jq:
  install:
    self:
      packages:
        - "jq"
      pips:
        - "yq"




keepassxc:
  install:
    self:
      packages:
        - "keepassxc"




kernel:
  install:
    self:
      packages:
        - "dkms"




keybase:
  url: "https://prerelease.keybase.io/keybase_amd64.deb"




kitty:
  configure:
    global:
      src: "kitty/files/config"
      dst: "{{ user_conf }}/kitty/config"

  environment:
    src: "kitty/files/env"
    dst: "{{ user_conf }}/kitty/env"




less:
  install:
    self:
      packages:
        - "less"

  configure:
    self:
      src: "less/files/history"
      dst: "{{ user_conf }}/less/history"

  environment:
    src: "less/files/env"
    dst: "{{ user_conf }}/less/env"




locale:
  environment:
    src: "locale/files/env"
    dst: "{{ user_conf }}/locale/env"




monitors:
  configure:
    global:
      src: "monitors/files/config"
      dst: "{{ user_conf }}/monitors.xml"




mutt:
  install:
    self:
      packages:
        - "mutt"

  configure:
    self:
      src: "mutt/files/config"
      dst: "{{ user_conf }}/mutt/config"

  environment:
    src: "mutt/files/env"
    dst: "{{ user_conf }}/mutt/env"




network:
  install:
    vpn:
      packages:
        - "network-manager-openvpn"
        - "network-manager-openvpn-gnome"



pip:
  install:
    self:
      packages:
        - "python-apt"
        - "python-pip"
        - "python3-pip"
        - "python3-venv"




pipenv:
  install:
    self:
      pips:
        - "pipenv"

  environment:
    src: "pipenv/files/env"
    dst: "{{ user_conf }}/pipenv/env"




post:




pre:
  config: "{{ user_conf }}"
  backup: "backup/{{ ansible_date_time.date }}.zip"




pycharm:
  configure:
    self:
      src: "pycharm/files/config"
      dst: "{{ user_conf }}/pycharm/config"

  environment:
    src: "pycharm/files/env"
    dst: "{{ user_conf }}/pycharm/env"
  




pyenv:
  install:
    self:
      commands:
        - "rm -r '{{ user_home }}/.cache/pyenv' || true"
        - "curl https://pyenv.run | PYENV_ROOT='{{ user_home }}/.cache/pyenv' bash"

  environment:
    src: "pyenv/files/env"
    dst: "{{ user_conf }}/pyenv/env"




python:
  install:
    self:
      packages:
        - "python3"
        - "python3-pip"
    debugger:
      pips:
        - "ipdb"
        - "ripdb"

  configure:
    self:
      src: "python/files/config"
      dst: "{{ user_conf }}/python/config"
    history:
      src: "python/files/history"
      dst: "{{ user_conf }}/python/history"

  environment:
    src: "python/files/env"
    dst: "{{ user_conf }}/python/env"




qbittorrent:
  install:
    self:
      packages:
        - "qbittorrent"




readline:
  configure:
    self:
      src: "readline/files/config"
      dst: "{{ user_conf }}/readline/config"

  environment:
    src: "readline/files/env"
    dst: "{{ user_conf }}/readline/env"




redshift:
  install:
    self:
      packages:
        - "redshift"




ruby:




signal:
  install:
    self:
      flatpaks:
        - "flathub org.signal.Signal"




slack:




spotify:
  install:
    self:
      flatpaks:
        - "flathub com.spotify.Client"




ssh:
  install:
    self:
      packages:
        - "openssh-client"
        - "openssh-server"

  configure:
    ssh:
      src: "ssh/files/ssh_config"
      dst: "/etc/ssh/ssh_config"
      become: yes
    sshd:
      src: "ssh/files/sshd_config"
      dst: "/etc/ssh/sshd_config"
      become: yes
    self:
      src: "ssh/files/config"
      dst: "{{ user_conf }}/ssh/config"

  move:
    known_hosts:
      src: "~/.ssh/known_hosts"
      dst: "{{ user_conf }}/ssh/known_hosts"
    authorized_keys:
      src: "~/.ssh/authorized_keys"
      dst: "{{ user_conf }}/ssh/authorized_keys"




steam:
  install:
    self:
      flatpaks:
        - "flathub com.valvesoftware.Steam"




sublime:
  install:
    self:
      packages:
        - "sublime-text"
        - "sublime-merge"




syncthing:
  install:
    self:
      packages:
        - "syncthing"




tarsnap:
  url: "https://www.tarsnap.com/download/tarsnap-autoconf-1.0.39.tgz"




telegram:
  install:
    self:
      flatpaks:
        - "flathub org.telegram.desktop"




terraform:
  url: "https://releases.hashicorp.com/terraform/0.12.2/terraform_0.12.2_linux_amd64.zip"

  configure:
    self:
      src: "terraform/files/config"
      dst: "{{ user_conf }}/terraform/config"

  environment:
    src: "terraform/files/env"
    dst: "{{ user_conf }}/terraform/env"




tlp:
  install:
    self:
      packages:
        - "tlp"

  configure:
    global:
      src: "tlp/files/config"
      dst: "/etc/default/tlp"
      become: yes




tmux:
  install:
    self:
      packages:
        - "tmux"

  configure:
    self:
      src: "tmux/files/config"
      dst: "{{ user_conf }}/tmux/config"

  environment:
    src: "tmux/files/env"
    dst: "{{ user_conf }}/tmux/env"




toolbox:
  url: "https://download.jetbrains.com/toolbox/jetbrains-toolbox-1.15.5796.tar.gz"




userdirs:
  data: "{{ user_home }}/.local/share"
  cache: "{{ user_home }}/.local/cache"
  config: "{{ user_home }}/.config"

  documents: "{{ user_home }}/docs"
  music: "{{ user_home }}/docs/music"
  public: "{{ user_home }}/docs/shared"
  videos: "{{ user_home }}/docs/videos"
  desktop: "{{ user_home }}/docs/desktop"
  pictures: "{{ user_home }}/docs/pictures"
  downloads: "{{ user_home }}/docs/downloads"
  templates: "{{ user_home }}/docs/templates"

  work: "{{ user_work }}"
  mine: "{{ user_mine }}"

  install:
    self:
      packages:
        - "xdg-utils"

  configure:
    global:
      src: "userdirs/files/config"
      dst: "{{ user_conf }}/user-dirs.dirs"

  environment:
    src: "userdirs/files/env"
    dst: "{{ user_conf }}/userdirs/env"




vagrant:
  install:
    self:
      gpgkeys:
        - "keyserver.ubuntu.com/AD319E0F7CFFA38B4D9F6E55CE3F3DE92099F7A4"
      lists:
        - "deb https://vagrant-deb.linestarve.com/ any main"
      packages:
        - "vagrant"

  environment:
    src: "vagrant/files/env"
    dst: "{{ user_conf }}/vagrant/env"




vim:
 install:
   self:
     packages:
       - "vim"

 configure:
   self:
     src: "vim/files/config"
     dst: "{{ user_conf }}/vim/config"
   theme:
     src: "vim/files/hero.vim"
     dst: "{{ user_conf }}/vim/colors/hero.vim"

 environment:
   src: "vim/files/env"
   dst: "{{ user_conf }}/vim/env"
 



virtualbox:
  machine_folder: "vboxmanage setproperty machinefolder /path/to/directory/"

  install:
    self:
      gpgkeys:
        - "https://www.virtualbox.org/download/oracle_vbox.asc"
        - "https://www.virtualbox.org/download/oracle_vbox_2016.asc"
      lists:
        - "deb [arch=i386,amd64] http://download.virtualbox.org/virtualbox/debian buster contrib"
      packages:
        - "virtualbox-6.0"




vlc:
  install:
    self:
      packages:
        "vlc"




wine:




yarn:
  install:
    self:
      gpgkeys:
        - "https://dl.yarnpkg.com/debian/pubkey.gpg"
      lists:
        - "deb https://dl.yarnpkg.com/debian/ stable main"
      packages:
        - "yarn"




zsh:
  install:
    self:
      packages:
        - "zsh"

  configure:
    self:
      src: "zsh/files/config"
      dst: "{{ user_conf }}/zsh/config"
