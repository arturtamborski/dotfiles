---

user_name: "artur"
user_home: "/home/{{ user_name }}"


pre:
  config: "{{ user_home }}/.config"
  backup: "backup/{{ ansible_date_time.date }}.zip"




monitors:
  configure:
    global:
      src: "monitors/files/config"
      dst: "{{ pre.config }}/monitors.xml"




kitty:
  configure:
    global:
      src: "kitty/files/config"
      dst: "{{ pre.config }}/kitty/config"

  environment:
    src: "kitty/files/env"
    dst: "{{ pre.config }}/kitty/env"




autoenv:
  configure:
    global:
      src: "autoenv/files/script"
      dst: "{{ pre.config }}/autoenv/script"

  environment:
    src: "autoenv/files/env"
    dst: "{{ pre.config }}/autoenv/env"




userdirs:
  home: "{{ user_home }}"
  data: "{{ user_home }}/.local/share"
  cache: "{{ user_home }}/.local/cache"

  downloads: "{{ user_home }}/downloads"
  documents: "{{ user_home }}/docs"
  music: "{{ user_home }}/docs/music"
  public: "{{ user_home }}/docs/shared"
  videos: "{{ user_home }}/docs/videos"
  desktop: "{{ user_home }}/docs/desktop"
  pictures: "{{ user_home }}/docs/pictures"
  templates: "{{ user_home }}/docs/templates"

  install:
    self:
      packages:
        - "xdg-utils"

  configure:
    global:
      src: "userdirs/files/config"
      dst: "{{ pre.config }}/user-dirs.dirs"

  environment:
    src: "userdirs/files/env"
    dst: "{{ pre.config }}/userdirs/env"




apt:
  dependencies:
    - "curl"
    - "wget"
    - "dirmngr"
    - "aptitude"
    - "ca-certificates"
    - "apt-transport-https"
    - "software-properties-common"




kernel:
  install:
    self:
      packages:
        - "dkms"




flatpak:
  remotes:
    - "flathub https://flathub.org/repo/flathub.flatpakrepo"

  install:
    self:
      packages:
        - "flatpak"
        - "gnome-software-plugin-flatpak"




pip:
  install:
    self:
      packages:
        - "python-apt"
        - "python-pip"
        - "python3-pip"




pipenv:
  install:
    self:
      pips:
        - "pipenv"

  environment:
    src: "pipenv/files/env"
    dst: "{{ pre.config }}/pipenv/env"



pyenv:
  install:
    self:
      commands:
        - "curl https://pyenv.run | PYENV_ROOT='~/.cache/pyenv' bash"

  environment:
    src: "pyenv/files/env"
    dst: "{{ pre.config }}/pyenv/env"




dircolors:
  configure:
    self:
      src: "dircolors/files/config"
      dst: "{{ pre.config }}/dircolors/config"

  environment:
    src: "dircolors/files/env"
    dst: "{{ pre.config }}/dircolors/env"




tlp:
  install:
    self:
      packages:
        - "tlp"

  configure:
    global:
      src: "tlp/files/config"
      dst: "/etc/default/tlp"
      become: yes




bash:
  histfile: "{{ pre.config }}/bash/history"

  install:
    self:
      packages:
        - "bash"

  configure:
    global:
      src: "bash/files/global"
      dst: "/etc/bash.bashrc"
      become: yes
    self:
      src: "bash/files/config"
      dst: "{{ pre.config }}/bash/config"




zsh:
  install:
    self:
      packages:
        - "zsh"

  configure:
    self:
      src: "zsh/files/config"
      dst: "{{ pre.config }}/zsh/config"




fzf:
  install:
    self:
      packages:
        - "fzf"




ssh:
  install:
    self:
      packages:
        - "openssh-client"
        - "openssh-server"

  configure:
    ssh:
      src: "ssh/files/ssh_config"
      dst: "/etc/ssh/ssh_config"
      become: yes
    sshd:
      src: "ssh/files/sshd_config"
      dst: "/etc/ssh/sshd_config"
      become: yes
    self:
      src: "ssh/files/config"
      dst: "{{ pre.config }}/ssh/config"

  move:
    known_hosts:
      src: "~/.ssh/known_hosts"
      dst: "{{ pre.config }}/ssh/known_hosts"
    authorized_keys:
      src: "~/.ssh/authorized_keys"
      dst: "{{ pre.config }}/ssh/authorized_keys"




git:
  name: "Artur Tamborski"
  email: "tamborskiartur@gmail.com"

  install:
    self:
      packages:
        - "git"
        - "git-extras"

  configure:
    self:
      src: "git/files/config"
      dst: "{{ pre.config }}/git/config"
    ignore:
      src: "git/files/ignore"
      dst: "{{ pre.config }}/git/ignore"
    pre-push:
      src: "git/files/hooks/pre-push"
      dst: "{{ pre.config }}/git/hooks/pre-push"

  environment:
    src: "git/files/env"
    dst: "{{ pre.config }}/git/env"




github:




less:
  install:
    self:
      packages:
        - "less"

  configure:
    self:
      src: "less/files/history"
      dst: "{{ pre.config }}/less/history"

  environment:
    src: "less/files/env"
    dst: "{{ pre.config }}/less/env"




tmux:
  install:
    self:
      packages:
        - "tmux"

  configure:
    self:
      src: "tmux/files/config"
      dst: "{{ pre.config }}/tmux/config"

  environment:
    src: "tmux/files/env"
    dst: "{{ pre.config }}/tmux/env"




gnupg:
  install:
    self:
      packages:
        - "gpg"
  
  configure:
    self:
      src: "gnupg/files/config"
      dst: "{{ pre.config }}/gnupg/config"

  environment:
    src: "gnupg/files/env"
    dst: "{{ pre.config }}/gnupg/env"




jq:
  install:
    self:
      packages:
        - "jq"




yq:
  install:
    self:
      pips:
        - "yq"




mutt:
  install:
    self:
      packages:
        - "mutt"

  environment:
    src: "mutt/files/env"
    dst: "{{ pre.config }}/mutt/env"




htop:
  install:
    self:
      packages:
        - "htop"

  configure:
    self:
      src: "htop/files/config"
      dst: "{{ pre.config }}/htop/config"




unar:
  install:
    self:
      packages:
        - "unar"




unzip:
  install:
    self:
      packages:
        - "unzip"




tarsnap:
  url: "https://www.tarsnap.com/download/tarsnap-autoconf-1.0.39.tgz"




syncthing:
  install:
    self:
      packages:
        - "syncthing"




gopass:
  install:
    self:
      packages:
        - "gopass"




keepassxc:
  install:
    self:
      packages:
        - "keepassxc"




vim:
  install:
    self:
      packages:
        - "vim"

  configure:
    self:
      src: "vim/files/config"
      dst: "{{ pre.config }}/vim/config"
    theme:
      src: "vim/files/hero.vim"
      dst: "{{ pre.config }}/vim/colors/hero.vim"

  environment:
    src: "vim/files/env"
    dst: "{{ pre.config }}/vim/env"



ghostwriter:
  install:
    self:
      gpgkeys:
        - "ha.pool.sks-keyservers.net/EF3F38C8FD5E1EE2E7B3B657653124679B3CCB19"
      lists:
        - "deb http://ppa.launchpad.net/wereturtle/ppa/ubuntu stretch main"
      packages:
        - "ghostwriter"




firefox:
  install:
    self:
      packages:
        - "firefox-esr"




qbittorrent:
  install:
    self:
      packages:
        "qbittorrent"




spotify:
  install:
    self:
      flatpaks:
        - "flathub com.spotify.Client"




vlc:
  install:
    self:
      packages:
        "vlc"




audacity:
  install:
    self:
      packages:
        - "audacity"




gimp:
  install:
    self:
      packages:
        - "gimp"




inkscape:
  install:
    self:
      packages:
        - "inkscape"




imagemagick:
  install:
    self:
      packages:
        - "imagemagick"




c:
  install:
    self:
      packages:
        - "gcc"
        - "build-essential"

  environment:
    src: "c/files/env"
    dst: "{{ pre.config }}/c/env"




go:
  url: "https://dl.google.com/go/go1.12.5.linux-amd64.tar.gz"

  environment:
    src: "go/files/env"
    dst: "{{ pre.config }}/go/env"




python:
  install:
    self:
      packages:
        - "python3"
        - "python3-pip"

  environment:
    src: "python/files/env"
    dst: "{{ pre.config }}/python/env"




ruby:




slack:




signal:
  install:
    self:
      flatpaks:
        - "flathub org.signal.Signal"




telegram:
  install:
    self:
      flatpaks:
        - "flathub org.telegram.desktop"




steam:
  install:
    self:
      flatpaks:
        - "flathub com.valvesoftware.Steam"




virtualbox:
  install:
    self:
      gpgkeys:
        - "https://www.virtualbox.org/download/oracle_vbox.asc"
        - "https://www.virtualbox.org/download/oracle_vbox_2016.asc"
      lists:
        - "deb [arch=i386,amd64] http://download.virtualbox.org/virtualbox/debian buster contrib"
      packages:
        - "virtualbox-6.0"




vagrant:
  install:
    self:
      gpgkeys:
        - "keyserver.ubuntu.com/AD319E0F7CFFA38B4D9F6E55CE3F3DE92099F7A4"
      lists:
        - "deb https://vagrant-deb.linestarve.com/ any main"
      packages:
        - "vagrant"




docker:
  install:
    self:
      gpgkeys:
        - "https://download.docker.com/linux/debian/gpg"
      lists:
        - "deb [arch=amd64] https://download.docker.com/linux/debian buster stable"
      packages:
        - "docker-ce"

    compose:
      pips:
        - "docker-compose"




terraform:
  url: "https://releases.hashicorp.com/terraform/0.12.2/terraform_0.12.2_linux_amd64.zip"

  configure:
    self:
      src: "terraform/files/config"
      dst: "{{ pre.config }}/terraform/config"

  environment:
    src: "terraform/files/env"
    dst: "{{ pre.config }}/terraform/env"




awscli:
  install:
    self:
      pips:
        - "awscli"




httpie:
  install:
    self:
      pips:
        - "httpie"

  configure:
    self:
      src: "httpie/files/config"
      dst: "{{ pre.config }}/httpie/config"

  environment:
    src: "httpie/files/env"
    dst: "{{ pre.config }}/httpie/env"




toolbox:
  url: "https://download.jetbrains.com/toolbox/jetbrains-toolbox-1.15.5796.tar.gz"




dbeaver:
  install:
    self:
      gpgkeys:
        - "https://dbeaver.io/debs/dbeaver.gpg.key"
      lists:
        - "deb https://dbeaver.io/debs/dbeaver-ce /"
      packages:
        - "dbeaver-ce"




defold:
  url: "https://www.defold.com/download/editor2/Defold-x86_64-linux.zip"




post:
