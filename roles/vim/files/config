" ============================================================================ "
" ========================   V I M   C O N F I G U R A T I O N   F I L E   === "
" ============================================================================ "




" ============================================================================ "
" ======================================================   P L U G I N S   === "
filetype off
set nocompatible
set runtimepath+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" ---------------------------------------------------------------------------- "

" ----------------------------------------------------------------- Vundle --- "
" git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
Plugin 'VundleVim/Vundle.vim'

" --------------------------------------------------------------- NERDtree --- "
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'

" ---------------------------------------------------------------- tabular --- "
"Plugin 'godlygeek/tabular'

" ----------------------------------------------------------------- tagbar --- "
"Plugin 'majutsushi/tagbar'

" ---------------------------------------------------------- vim-gitgutter --- "
"Plugin 'airblade/vim-gitgutter'

" ------------------------------------------------------------ vim-easygit --- "
"Plugin 'chemzqm/vim-easygit'

" -------------------------------------------------------- camelCaseMotion --- "
"Plugin 'bkad/camelcasemotion'

" ------------------------------------------------------------------ Gundo --- "
"Plugin 'sjl/gundo.vim'

" ---------------------------------------------------------- validator.vim --- "
"Plugin 'maralla/validator.vim'

" ---------------------------------------------------------- completor.vim --- "
"Plugin 'maralla/completor.vim'

" ------------------------------------------------------------------ ctrlP --- "
Plugin 'kien/ctrlp.vim'

" ----------------------------------------------------------- vimshell.vim --- "
"Plugin 'shougo/vimshell.vim'

" --------------------------------------------------------- promptline.vim --- "
"Plugin 'edkolev/promptline.vim'

" --------------------------------------------------------- VimCompletesMe --- "
"Plugin 'ajh17/vimcompletesme'

" ---------------------------------------------------------------------------- "
call vundle#end()

" ============================================================================ "
" ============================================================================ "




" ============================================================================ "
" =================================================   F U N C T I O N S   ==== "

" ------------------------------------------------ RestoreCursorPosition() --- "
function! RestoreCursorPosition()
    if line("'\"") <= line("$")
        normal! g`"
        return 1
    endif
endfunction

" ----------------------------------------------------------- WhiteSpace() --- "
function! WhiteSpace()
    set list!
endfunction

" ------------------------------------------------------------- ToSpaces() --- "
function! ToSpaces()
    set expandtab
    retab!
endfunction

" --------------------------------------------------------------- ToTabs() --- "
function! ToTabs()
    set noexpandtab
    retab!
endfunction

" ----------------------------------------------------- StripWhiteSpaces() --- "
function! StripWhiteSpaces()
    run %s/\s\+$//ec
endfunction

" ------------------------------------------------------ StripBlankLines() --- "
function! StripBlankLines()
    run global/^$/d
endfunction

" ----------------------------------- save file when you forget to be root --- "
cnoremap w!! execute 'silent! write !sudo tee > /dev/null %' <bar> edit!<enter>

" ============================================================================ "
" ============================================================================ "




" ============================================================================ "
" ====================================================   S E T T I N G S   === "

" ------------------------------------------------------------ color theme --- "
set background=dark
colo hero

" ------------------------------------------------------------- secure vim --- "
set exrc
set secure
set nocompatible

" --------------------------------------------------------------- encoding --- "
set encoding=utf-8

" ----------------------------------------------------- set terminal title --- "
set title

" ------------------------------------------------- highlight current line --- "
set cursorline

" -------------------------------------------------- highlight whitespaces --- "
set listchars=tab:>-,eol:$,trail:-,extends:>,precedes:<,space:␣,nbsp:%
set nolist

" ----------------------------------------------------- file-type settings --- "
syntax on
filetype on
filetype plugin on
filetype indent on

autocmd BufRead,BufNewFile *.c,*.h      set ts=8 sts=8 sw=8 noet
autocmd BufRead,BufNewFile Makefile     set ts=4 sts=4 sw=4 noet
autocmd BufRead,BufNewFile *.yml,*.yaml set ts=2 sts=2 sw=2 et
autocmd BufRead,BufNewFile *.html       set ts=2 sts=2 sw=2 et
autocmd BufRead,BufNewFile *.css,*.scss set ts=2 sts=2 sw=2 et
autocmd BufRead,BufNewFile *.txt,*.md   set ts=2 sts=2 sw=2 et
autocmd BufRead,BufNewFile *.py,*.rb    set ts=4 sts=4 sw=4 et

" ------------------------------------------------------- force 256 colors --- "
set t_Co=256

" ------------------------------------------------------------------- bell --- "
set visualbell
set noerrorbells
set t_vb=
set gcr=a:blinkon0

" --------------------------------------------------------------- printing --- "
set printoptions=paper:letter

" ----------------------------------------------------------- enable mouse --- "
set mouse=a

" ------------------------------------------------------------- spellcheck --- "
"set spell
"set spelllang=en,pl

" ------------------------------------------------------------- text width --- "
"set textwidth=80
"set colorcolumn=+1
"set virtualedit=onemore

" better solution, mark too wide lines with error colors
set textwidth=0
match ErrorMsg '\%>80v.\+'

" ---------------------------------------------------------- line wrapping --- "
set wrap
set linebreak
set display+=lastline
set showbreak="↳ "

" ----------------------------------------------------------- text folding --- "
set foldmethod=indent
set foldmethod=syntax
set foldnestmax=10

" ------------------------------------------------------- indentation help --- "
" tabs are eight columns wide, each identation level is one tab (linux kernel):
" vim: set tabstop=8 softtabstop=8 shiftwidth=8 noexpandtab
"
" tabs are four columns wide, each identation level is one tab (visual studio):
" vim: set tabstop=4 softtabstop=4 shiftwidth=4 noexpandtab
"
" each indentation level is four spaces tabs are not used (java):
" vim: set softtabstop=4 shiftwidth=4 expandtab

" ------------------------------------------------------------ indentation --- "
set autoindent
set smartindent
set smarttab
set shiftwidth=4
set softtabstop=4
set tabstop=4

" spaces
set expandtab

" tabs
"set noexpandtab

" -------------------------------------------------------------- searching --- "
set incsearch
set ignorecase
set smartcase
set hlsearch

" --------------------------------------------------------------- wildmenu --- "
set path=**
set wildmenu
set wildchar=<Tab>
set wildmode=full
set wildignore=*.o,*.fasl

" ---------------------------------------------------------- swap & backup --- "
set noswapfile
set backup
set writebackup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp


" ------------------------------------------------------------------- undo --- "
if !isdirectory($HOME."/.dotfiles/vim/undodir")
    call mkdir($HOME."/.dotfiles/vim/undodir", "p")
endif

set undodir=~/.vim/undodir
set undofile
set undolevels=10000
set undoreload=10000

" --------------------------------------------------------- longer history --- "
set history=1000

" ------------------------------------------------ store last session info --- "
set viminfo='10,\"100,:20,%,n~/.viminfo

" -------------------------------------------- jump to last modified place --- "
autocmd BufWinEnter * call RestoreCursorPosition()

" -------------------------------------------------- diff refresh on write --- "
autocmd BufWritePost * if &diff == 1 | diffupdate | endif

" ----------------------------------- autoreload files changed outside vim --- "
set autoread

" --------------------------------------- turn off expandtab for makefiles --- "
autocmd FileType make setlocal noexpandtab
autocmd Filetype html setlocal tw=0

set shiftwidth=4
set softtabstop=4
set tabstop=4

" -------------------------------------------------------------------- gui --- "
if has('gui_running')
    set encoding=utf-8
    set guioptions-=T
    set guioptions-=m
end

" ---------------------------------------------------------- fix backspace --- "
set backspace=indent,eol,start

" -------------------------------------------------- minimum window height --- "
set winminheight=1
set winheight=1

" ----------------------------------------------------------- line numbers --- "
set number
set numberwidth=5

set nonumber

" ----------------------------------------- more context around the cursor --- "
set scrolloff=3
set sidescroll=1
set sidescrolloff=1

" ------------------------------------------------------------------ ruler --- "
set ruler
set noshowcmd
set showmode

" ----------------------------------------------- tab line and status line --- "
set showtabline=1
set laststatus=2

" ---------------------------------------------------------- default split --- "
set splitright splitbelow

" ----------------------------------------- copy/paste to system clipboard --- "
set clipboard=unnamed

" ------------------------------------ manage multiple buffers effectively --- "
set hidden

" ------------------------------------------------------ redraw everything --- "
"set nolazyredraw
set lazyredraw

" ------------------------------------------ turn off interruptive prompts --- "
set shortmess=astTI

" ----------------------------------------------------- leader key timeout --- "
set timeoutlen=500

" -------------------------------------------------- show matching bracket --- "
set showmatch
set matchtime=1

" ------------------------------------------------------- relative numbers --- "
"set relativenumber

" ------------------------------------------------------------ local vimrc --- "
if $PWD != $HOME && filereadable($PWD . "/.vimrc")
    source $PWD . "/.vimrc"
endif

" ============================================================================ "
" ============================================================================ "




" ============================================================================ "
" ===========================================   K E Y   M A P P I N G S   ==== "

map <C-S> <nop>
imap <C-S> <nop>
nnoremap <C-S> <nop>
inoremap <C-S> <nop>

inoremap <C-CR> <Esc><Esc>
nnoremap <C-CR> i
map <C-C>  <Esc><Esc>

" -------------------------------------------- clearing highlighted search --- "
nmap <silent> // :nohlsearch<CR>

" -------------------------------------------------------- regex searching --- "
nnoremap <leader>/ /\v
nnoremap <leader>? ?\v

" --------------------------------------------------- save files with sudo --- "
cmap w!! w !sudo tee > /dev/null %

" ------------------------------------------------------ current file diff --- "
cmap diffw exec 'w !git diff --no-index -- - ' . shellescape(expand('%'))

" ------------------------------ map key to toggle whitespace highlighting --- "
nmap <silent> <leader>w :set nolist!<CR>

" ------------------------------------------- turn off man search key bind --- "
nnoremap <S-K> <NOP>

" ---------------------------------------------------------- turn off help --- "
nnoremap <F1> <NOP>

" -------------------------------------------------- make your life easier --- "
nmap ; :

" ------------------------------------------------ build script on keybind --- "
nnoremap <F8> :!./build.sh<CR>

" ------------------------------ run compiled program by calling :!./thing --- "
let out_program = "./" . system("basename `pwd`")
nnoremap <F9> :exe ":!clear; " . out_program <CR>

" -------------------------------------------------- open shell on keybind --- "
let out_shell = system("echo $SHELL")
nnoremap <F12> :exe "!" . out_shell <CR>

" ------------------------------------------------- bind functions to keys --- "
nnoremap <silent> <Leader>tt call ToTabs()<CR>
nnoremap <silent> <Leader>ts call ToSpaces()<CR>
nnoremap <silent> <Leader>sw call StripWhiteSpaces()<CR>
nnoremap <silent> <Leader>sb call StripBlankLines()<CR>
nnoremap <silent> <Leader>ws call WhiteSpace()<CR>

" --------------------------------------- better movement in wrapped lines --- "
noremap <silent> <expr> j (v:count == 0 ? 'gj' : 'j')
noremap <silent> <expr> k (v:count == 0 ? 'gk' : 'k')

" ---------------------------------- line-scrolling working in insert mode --- "
inoremap <C-E> <C-X><C-E>
inoremap <C-Y> <C-X><C-Y>

" ---------------------------------------------------- fix visual shifting --- "
vnoremap < <gv
vnoremap > >gv 
vmap <Tab> >gv
vmap <S-Tab> <gv

" ------------------------------------------------------ window management --- "
map <C-H> <C-W>h
map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-L> <C-W>l

" --------------------------------------------------- map keys for tooltip --- "
inoremap <expr> J pumvisible() ? "<Down>" : "J"
inoremap <expr> K pumvisible() ? "<Up>" : "K"
inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"

" --------------------------- map Ctrl-Space to enter and quit INSERT mode --- "
"nnoremap <C-@> i
"imap <C-@> <Esc><Esc>

" ------------------------------------------------ auto indent pasted text --- "
noremap p p=`]<C-o>
noremap P P=`]<C-o>

" ------------------------------------------------------------- safer undo --- "
inoremap <C-U> <C-G>u<C-U>

" --------------------------------------- consistent yanking with deleting --- "
nnoremap Y y$

" ------------------------------------------------ swap ` and ' characters --- "
"nnoremap ' `
"nnoremap ` '

" ------------------------------------------------------- remap leader key --- "
let mapleader = ","

" ============================================================================ "
" ============================================================================ "




" ============================================================================ "
" ======================================   P L U G I N   S E T T I N G S  ==== "

" ----------------------------------------------------------------- Vundle --- "

" --------------------------------------------------------------- NERDtree --- "
map <F4> :NERDTreeToggle<CR>
let g:NERDTreeIndicatorMapCustom = {
            \ "Modified"  : "✹",
            \ "Staged"    : "✚",
            \ "Untracked" : "✭",
            \ "Renamed"   : "➜",
            \ "Unmerged"  : "═",
            \ "Deleted"   : "✖",
            \ "Dirty"     : "✗",
            \ "Clean"     : "✔︎",
            \ "Unknown"   : "?"
            \ }

" ---------------------------------------------------------------- tabular --- "
nmap <Leader>t= :Tab /=<CR>
vmap <Leader>t: :Tab /=<CR>
nmap <Leader>t: :Tab /:\zs<CR>
vmap <Leader>t: :Tab /:\zs<CR>

" ------------------------------------------------------------------tagbar --- "
nmap <F5> :TagbarToggle<CR>

" ---------------------------------------------------------- vim-gitgutter --- "
let g:gitgutter_sign_column_always = 0

" ------------------------------------------------------------ vim-easygit --- "
let g:easygit_enable_command = 1

" -------------------------------------------------------- camelCaseMotion --- "
map <S-W> <Plug>CamelCaseMotion_w
map <S-B> <Plug>CamelCaseMotion_b
map <S-E> <Plug>CamelCaseMotion_e

" ------------------------------------------------------------------ Gundo --- "
nnoremap <F3> :GundoToggle<CR>
let g:gundo_width = 60
let g:gundo_height = 40
let g:gundo_right = 1
let g:gundo_close_on_revert = 1
let g:gundo_help = 0

" ---------------------------------------------------------- validator.vim --- "
let g:validator_c_checkers = [ 'clang-tidy' ]
let g:validator_sh_checkers = [ 'shellcheck' ]

let g:validator_auto_open_quickfix = 0
let g:validator_permament_sign = 0

" ---------------------------------------------------------- completor.vim --- "

" ------------------------------------------------------------------ ctrlP --- "
let g:ctrlp_map = '<c-p>'
let g:ctrlp_working_path_mode = 'ra'

" --------------------------------------------------------- VimCompletesMe --- "


" ============================================================================ "
" ============================================================================ "

# edit this later to ~/.config/vim
set viminfo=""
